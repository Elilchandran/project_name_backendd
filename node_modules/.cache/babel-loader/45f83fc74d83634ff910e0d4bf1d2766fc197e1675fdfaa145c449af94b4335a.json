{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karthik\\\\Documents\\\\student_task\\\\student_portal\\\\src\\\\component\\\\Sidebar\\\\TasksSubmission.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskSubmission = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [taskName, setTaskName] = useState('');\n  // ... Other state variables for task details\n\n  useEffect(() => {\n    // Fetch tasks from the backend and update state\n    const fetchTasks = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/tasks/1'); // Fetch tasks for a specific user ID (e.g., user ID 1)\n\n        if (response.ok) {\n          const data = await response.json();\n          setTasks(data.stasks);\n        } else {\n          console.error('Failed to fetch tasks');\n        }\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, []);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Submit a new task to the backend\n    try {\n      const response = await fetch('http://localhost:3001/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId: 1,\n          // For example, submitting tasks for user ID 1\n          taskName\n          // ... Other task details\n        })\n      });\n\n      if (response.ok) {\n        // If successful, fetch tasks again to update the list\n        const data = await response.json();\n        setTasks([...tasks, data.newTask]); // Assuming 'newTask' is the newly created task from the server\n        setTaskName(''); // Clear input fields\n        // ... Reset other input fields\n      } else {\n        console.error('Task submission failed');\n      }\n    } catch (error) {\n      console.error('Error submitting task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: taskName,\n        onChange: e => setTaskName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Task: \", task.taskName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, task.day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskSubmission, \"28AeB1MO2LhZloBEWcPGgkh9GAw=\");\n_c = TaskSubmission;\nexport default TaskSubmission;\nvar _c;\n$RefreshReg$(_c, \"TaskSubmission\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","TaskSubmission","_s","tasks","setTasks","taskName","setTaskName","fetchTasks","response","fetch","ok","data","json","stasks","console","error","handleSubmit","e","preventDefault","method","headers","body","JSON","stringify","userId","newTask","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","map","task","day","_c","$RefreshReg$"],"sources":["C:/Users/Karthik/Documents/student_task/student_portal/src/component/Sidebar/TasksSubmission.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst TaskSubmission = () => {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskName, setTaskName] = useState('');\r\n  // ... Other state variables for task details\r\n\r\n  useEffect(() => {\r\n    // Fetch tasks from the backend and update state\r\n    const fetchTasks = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:3001/tasks/1'); // Fetch tasks for a specific user ID (e.g., user ID 1)\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          setTasks(data.stasks);\r\n        } else {\r\n          console.error('Failed to fetch tasks');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    // Submit a new task to the backend\r\n    try {\r\n      const response = await fetch('http://localhost:3001/tasks', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          userId: 1, // For example, submitting tasks for user ID 1\r\n          taskName,\r\n          // ... Other task details\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // If successful, fetch tasks again to update the list\r\n        const data = await response.json();\r\n        setTasks([...tasks, data.newTask]); // Assuming 'newTask' is the newly created task from the server\r\n        setTaskName(''); // Clear input fields\r\n        // ... Reset other input fields\r\n      } else {\r\n        console.error('Task submission failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Task Management</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        {/* Form inputs for task details */}\r\n        <input type=\"text\" value={taskName} onChange={(e) => setTaskName(e.target.value)} />\r\n        {/* Other input fields for task details */}\r\n        <button type=\"submit\">Add Task</button>\r\n      </form>\r\n\r\n      {/* Display tasks */}\r\n      <ul>\r\n        {tasks.map((task) => (\r\n          <li key={task.day}>\r\n            <p>Task: {task.taskName}</p>\r\n            {/* Display other task details */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TaskSubmission;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}