{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karthik\\\\Documents\\\\student_task\\\\student_portal\\\\src\\\\component\\\\Dbarchart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dbarchart() {\n  _s();\n  const donutChartRef = useRef(null);\n  useEffect(() => {\n    // Get the canvas element for the donut chart\n    var donutCtx = document.getElementById('myDonutChart').getContext('2d');\n\n    // Destroy the existing donut chart if it exists\n    if (donutChartRef.current) {\n      donutChartRef.current.destroy();\n    }\n\n    // Define data for the donut chart\n    var donutData = {\n      labels: ['Red', 'Green', 'Blue'],\n      datasets: [{\n        data: [30, 40, 30],\n        backgroundColor: ['red', 'green', 'blue']\n      }]\n    };\n\n    // Create the donut chart\n    donutChartRef.current = new Chart(donutCtx, {\n      type: 'doughnut',\n      data: donutData\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myDonutChart\",\n      width: \"20%\",\n      height: \"20\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 11\n  }, this);\n}\n_s(Dbarchart, \"InNXNpg67epeqcH38gndotmkQ9I=\");\n_c = Dbarchart;\nexport default Dbarchart;\nvar _c;\n$RefreshReg$(_c, \"Dbarchart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","Dbarchart","_s","donutChartRef","donutCtx","document","getElementById","getContext","current","destroy","donutData","labels","datasets","data","backgroundColor","type","children","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Karthik/Documents/student_task/student_portal/src/component/Dbarchart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction Dbarchart() {\r\n  const donutChartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Get the canvas element for the donut chart\r\n    var donutCtx = document.getElementById('myDonutChart').getContext('2d');\r\n\r\n    // Destroy the existing donut chart if it exists\r\n    if (donutChartRef.current) {\r\n      donutChartRef.current.destroy();\r\n    }\r\n\r\n    // Define data for the donut chart\r\n    var donutData = {\r\n      labels: ['Red', 'Green', 'Blue'],\r\n      datasets: [\r\n        {\r\n          data: [30, 40, 30],\r\n          backgroundColor: ['red', 'green', 'blue'],\r\n        },\r\n      ],\r\n    };\r\n\r\n    // Create the donut chart\r\n    donutChartRef.current = new Chart(donutCtx, {\r\n      type: 'doughnut',\r\n      data: donutData,\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    \r\n          <div>\r\n            <canvas id=\"myDonutChart\" width=\"20%\" height=\"20\"></canvas>\r\n          </div>\r\n          \r\n  );\r\n}\r\n\r\nexport default Dbarchart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,aAAa,GAAGN,MAAM,CAAC,IAAI,CAAC;EAElCD,SAAS,CAAC,MAAM;IACd;IACA,IAAIQ,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;;IAEvE;IACA,IAAIJ,aAAa,CAACK,OAAO,EAAE;MACzBL,aAAa,CAACK,OAAO,CAACC,OAAO,CAAC,CAAC;IACjC;;IAEA;IACA,IAAIC,SAAS,GAAG;MACdC,MAAM,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM,CAAC;MAChCC,QAAQ,EAAE,CACR;QACEC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QAClBC,eAAe,EAAE,CAAC,KAAK,EAAE,OAAO,EAAE,MAAM;MAC1C,CAAC;IAEL,CAAC;;IAED;IACAX,aAAa,CAACK,OAAO,GAAG,IAAIV,KAAK,CAACM,QAAQ,EAAE;MAC1CW,IAAI,EAAE,UAAU;MAChBF,IAAI,EAAEH;IACR,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBAEQV,OAAA;IAAAgB,QAAA,eACEhB,OAAA;MAAQiB,EAAE,EAAC,cAAc;MAACC,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAGhB;AAACrB,EAAA,CArCQD,SAAS;AAAAuB,EAAA,GAATvB,SAAS;AAuClB,eAAeA,SAAS;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}