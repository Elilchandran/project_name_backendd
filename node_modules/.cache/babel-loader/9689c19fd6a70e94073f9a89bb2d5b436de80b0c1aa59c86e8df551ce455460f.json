{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useContent = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const handleLogin = async (email, password) => {\n    try {\n      const response = await fetch(\"http://localhost:3001/signin\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        setIsAuthenticated(true);\n        localStorage.setItem('isAuthenticated', true); // Store authentication status in localStorage\n      } else {\n        setIsAuthenticated(false);\n        localStorage.removeItem('isAuthenticated'); // Remove if the login fails\n        // You might want to show an error message here\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  const handleLogout = () => {\n    setIsAuthenticated(false);\n    localStorage.removeItem('isAuthenticated'); // Remove the authentication status on logout\n  };\n\n  useEffect(() => {\n    const storedIsAuthenticated = localStorage.getItem('isAuthenticated');\n    if (storedIsAuthenticated && JSON.parse(storedIsAuthenticated) === true) {\n      setIsAuthenticated(true);\n    }\n  }, []);\n  return {\n    isAuthenticated,\n    handleLogin,\n    handleLogout\n  };\n};\n_s(useContent, \"JkS3Meyzlj18m4l86SBr9YDqEkQ=\");\nexport default useContent;","map":{"version":3,"names":["useState","useEffect","useContent","_s","isAuthenticated","setIsAuthenticated","handleLogin","email","password","response","fetch","method","headers","body","JSON","stringify","ok","localStorage","setItem","removeItem","error","console","handleLogout","storedIsAuthenticated","getItem","parse"],"sources":["C:/Users/Karthik/Documents/student_task/student_portal/src/useContent.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useContent = () => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n    const handleLogin = async (email, password) => {\r\n        try {\r\n            const response = await fetch(\"http://localhost:3001/signin\", {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ email, password }),\r\n            });\r\n    \r\n            if (response.ok) {\r\n                setIsAuthenticated(true);\r\n                localStorage.setItem('isAuthenticated', true); // Store authentication status in localStorage\r\n            } else {\r\n                setIsAuthenticated(false);\r\n                localStorage.removeItem('isAuthenticated'); // Remove if the login fails\r\n                // You might want to show an error message here\r\n            }\r\n        } catch (error) {\r\n            console.error(\"Error:\", error);\r\n        }\r\n    };\r\n    \r\n\r\n    const handleLogout = () => {\r\n        setIsAuthenticated(false);\r\n        localStorage.removeItem('isAuthenticated'); // Remove the authentication status on logout\r\n    };\r\n\r\n    useEffect(() => {\r\n        const storedIsAuthenticated = localStorage.getItem('isAuthenticated');\r\n        if (storedIsAuthenticated && JSON.parse(storedIsAuthenticated) === true) {\r\n            setIsAuthenticated(true);\r\n        }\r\n    }, []);\r\n\r\n    return { isAuthenticated, handleLogin, handleLogout };\r\n};\r\n\r\nexport default useContent;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMM,WAAW,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC3C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,KAAK;UAAEC;QAAS,CAAC;MAC5C,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACO,EAAE,EAAE;QACbX,kBAAkB,CAAC,IAAI,CAAC;QACxBY,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC,CAAC;MACnD,CAAC,MAAM;QACHb,kBAAkB,CAAC,KAAK,CAAC;QACzBY,YAAY,CAACE,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC;QAC5C;MACJ;IACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;EACJ,CAAC;EAGD,MAAME,YAAY,GAAGA,CAAA,KAAM;IACvBjB,kBAAkB,CAAC,KAAK,CAAC;IACzBY,YAAY,CAACE,UAAU,CAAC,iBAAiB,CAAC,CAAC,CAAC;EAChD,CAAC;;EAEDlB,SAAS,CAAC,MAAM;IACZ,MAAMsB,qBAAqB,GAAGN,YAAY,CAACO,OAAO,CAAC,iBAAiB,CAAC;IACrE,IAAID,qBAAqB,IAAIT,IAAI,CAACW,KAAK,CAACF,qBAAqB,CAAC,KAAK,IAAI,EAAE;MACrElB,kBAAkB,CAAC,IAAI,CAAC;IAC5B;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAED,eAAe;IAAEE,WAAW;IAAEgB;EAAa,CAAC;AACzD,CAAC;AAACnB,EAAA,CAxCID,UAAU;AA0ChB,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}