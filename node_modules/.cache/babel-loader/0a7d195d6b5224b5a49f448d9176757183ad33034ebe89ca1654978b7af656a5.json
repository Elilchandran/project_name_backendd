{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nconst useContent = () => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null);\n  const handleLogin = async (email, password) => {\n    try {\n      const response = await fetch(\"http://localhost:3001/signin\", {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      if (response.ok) {\n        const result = await response.json();\n        if (result.message === 'Sign-in successful') {\n          setUser(result.user); // Store the user object\n          setIsAuthenticated(true);\n          localStorage.setItem('isAuthenticated', true);\n        } else {\n          console.error('Unexpected response:', result.message);\n        }\n      } else {\n        console.error('HTTP error:', response.status);\n        setIsAuthenticated(false);\n        localStorage.removeItem('isAuthenticated');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  const handleLogout = () => {\n    setUser(null);\n    setIsAuthenticated(false);\n    localStorage.removeItem('isAuthenticated');\n  };\n  useEffect(() => {\n    const storedIsAuthenticated = localStorage.getItem('isAuthenticated');\n    if (storedIsAuthenticated && JSON.parse(storedIsAuthenticated) === true) {\n      setIsAuthenticated(true);\n      // Fetch user-specific data after authentication\n    }\n  }, []);\n  return {\n    isAuthenticated,\n    handleLogin,\n    handleLogout,\n    user\n  };\n};\n_s(useContent, \"Cix+uXOU60jwVTrRl9ss+REDA3M=\");\nexport default useContent;","map":{"version":3,"names":["useState","useEffect","useContent","_s","isAuthenticated","setIsAuthenticated","user","setUser","handleLogin","email","password","response","fetch","method","headers","body","JSON","stringify","ok","result","json","message","localStorage","setItem","console","error","status","removeItem","handleLogout","storedIsAuthenticated","getItem","parse"],"sources":["C:/Users/Karthik/Documents/student_task/student_portal/src/useContent.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\n\r\nconst useContent = () => {\r\n   const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [user, setUser] = useState(null);\r\n\r\n    const handleLogin = async (email, password) => {\r\n      try {\r\n          const response = await fetch(\"http://localhost:3001/signin\", {\r\n              method: 'POST',\r\n              headers: {\r\n                  'Content-Type': 'application/json',\r\n              },\r\n              body: JSON.stringify({ email, password }),\r\n          });\r\n  \r\n          if (response.ok) {\r\n              const result = await response.json();\r\n              if (result.message === 'Sign-in successful') {\r\n                  setUser(result.user); // Store the user object\r\n                  setIsAuthenticated(true);\r\n                  localStorage.setItem('isAuthenticated', true);\r\n              } else {\r\n                  console.error('Unexpected response:', result.message);\r\n              }\r\n          } else {\r\n              console.error('HTTP error:', response.status);\r\n              setIsAuthenticated(false);\r\n              localStorage.removeItem('isAuthenticated');\r\n          }\r\n      } catch (error) {\r\n          console.error('Error:', error);\r\n      }\r\n  };\r\n  \r\n\r\n    const handleLogout = () => {\r\n      setUser(null)\r\n        setIsAuthenticated(false);\r\n        localStorage.removeItem('isAuthenticated');\r\n    };\r\n\r\n    useEffect(() => {\r\n        const storedIsAuthenticated = localStorage.getItem('isAuthenticated');\r\n        if (storedIsAuthenticated && JSON.parse(storedIsAuthenticated) === true) {\r\n            setIsAuthenticated(true);\r\n            // Fetch user-specific data after authentication\r\n        }\r\n    }, []);\r\n\r\n    return { isAuthenticated, handleLogin, handleLogout, user };\r\n};\r\n\r\nexport default useContent;\r\n"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAE3C,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAC5D,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAEtC,MAAMQ,WAAW,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IAC7C,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QACzDC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACL,cAAc,EAAE;QACpB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAER,KAAK;UAAEC;QAAS,CAAC;MAC5C,CAAC,CAAC;MAEF,IAAIC,QAAQ,CAACO,EAAE,EAAE;QACb,MAAMC,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACpC,IAAID,MAAM,CAACE,OAAO,KAAK,oBAAoB,EAAE;UACzCd,OAAO,CAACY,MAAM,CAACb,IAAI,CAAC,CAAC,CAAC;UACtBD,kBAAkB,CAAC,IAAI,CAAC;UACxBiB,YAAY,CAACC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC;QACjD,CAAC,MAAM;UACHC,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEN,MAAM,CAACE,OAAO,CAAC;QACzD;MACJ,CAAC,MAAM;QACHG,OAAO,CAACC,KAAK,CAAC,aAAa,EAAEd,QAAQ,CAACe,MAAM,CAAC;QAC7CrB,kBAAkB,CAAC,KAAK,CAAC;QACzBiB,YAAY,CAACK,UAAU,CAAC,iBAAiB,CAAC;MAC9C;IACJ,CAAC,CAAC,OAAOF,KAAK,EAAE;MACZD,OAAO,CAACC,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;EACJ,CAAC;EAGC,MAAMG,YAAY,GAAGA,CAAA,KAAM;IACzBrB,OAAO,CAAC,IAAI,CAAC;IACXF,kBAAkB,CAAC,KAAK,CAAC;IACzBiB,YAAY,CAACK,UAAU,CAAC,iBAAiB,CAAC;EAC9C,CAAC;EAED1B,SAAS,CAAC,MAAM;IACZ,MAAM4B,qBAAqB,GAAGP,YAAY,CAACQ,OAAO,CAAC,iBAAiB,CAAC;IACrE,IAAID,qBAAqB,IAAIb,IAAI,CAACe,KAAK,CAACF,qBAAqB,CAAC,KAAK,IAAI,EAAE;MACrExB,kBAAkB,CAAC,IAAI,CAAC;MACxB;IACJ;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IAAED,eAAe;IAAEI,WAAW;IAAEoB,YAAY;IAAEtB;EAAK,CAAC;AAC/D,CAAC;AAACH,EAAA,CAjDID,UAAU;AAmDhB,eAAeA,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}