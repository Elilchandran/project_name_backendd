{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karthik\\\\Documents\\\\student_task\\\\student_portal\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\n// import React from \"react\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// import NavBar from \"./component/NavBar\";\n// import './index.css'\n// import SideBar from \"./component/SideBar\";\n// import MainBar from \"./component/MainBar\";\n// import Login from \"./component/Login\";\n// import Register from \"./component/Register\";\n// import ForgetPs from \"./component/ForgetPs\";\n// import MyChart from \"./component/MyChart\";\n// import BarChart from \"./component/BarChart\";\n// import Dashboard from \"./component/Dashboard\";\n\n// function App() {\n//     // const [isSidebarOpen, setIsSidebarOpen] = useState(\" \");//value,function\n\n//     // const toggleSidebar = () => {\n//     //     setIsSidebarOpen(!isSidebarOpen);\n//     // };\n\n//     // useEffect(() => {\n//     //     // Always add 'sb-nav-fixed' class to the body and conditionally add/remove 'sb-sidenav-toggled' class\n//     //     document.body.classList.toggle('sb-nav-fixed',\" \");\n//     //     document.body.classList.toggle('sb-sidenav-toggled', isSidebarOpen);\n//     // }, [isSidebarOpen]);\n\n//     return (\n//         <Router>\n//             <nav>\n//                  <NavBar  />\n//             </nav>\n\n//             <div id=\"layoutSidenav\">\n//                 <Routes>\n//                     <Route path=\"/\" element={<SideBar />}/>\n//                 </Routes>\n\n//                 <Routes>\n//                     <Route path=\"/\" element={<MainBar />} />\n//                 </Routes>      \n//             </div>\n//                     <Routes>  \n//                         <Route path=\"/dashboard\"  element={<Dashboard/>}/>\n//                         <Route path=\"/login\" element={<Login/>}/>\n//                         <Route path=\"/register\" element={<Register/>}/>\n//                         <Route path=\"/forgetps\" element={<ForgetPs/>}/>\n//                         <Route path=\"/mychart\" element={<MyChart />} />\n//                         <Route path=\"/barchart\" element={<BarChart />} />\n//                     </Routes>\n\n//         </Router>\n\n//     )\n\n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport NavBar from \"./component/NavBar\";\nimport './index.css';\nimport SideBar from \"./component/SideBar\";\nimport MainBar from \"./component/MainBar\";\nimport Login from \"./component/Login\";\nimport Register from \"./component/Register\";\nimport ForgetPs from \"./component/ForgetPs\";\nimport MyChart from \"./component/MyChart\";\nimport BarChart from \"./component/BarChart\";\nimport Dashboard from \"./component/Dashboard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n\n  // Add an event listener to toggle the sidebar on DOMContentLoaded\n  useEffect(() => {\n    const handleContentLoaded = () => {\n      const sidebarToggle = document.getElementById('sidebarToggle');\n      if (sidebarToggle) {\n        sidebarToggle.addEventListener('click', () => {\n          setIsSidebarOpen(!isSidebarOpen);\n        });\n      }\n    };\n    document.addEventListener('DOMContentLoaded', handleContentLoaded);\n    return () => {\n      // Clean up the event listener when the component unmounts\n      document.removeEventListener('DOMContentLoaded', handleContentLoaded);\n    };\n  }, [isSidebarOpen]);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"layoutSidenav\",\n      className: isSidebarOpen ? 'sb-sidenav-toggled' : '',\n      children: [/*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(MainBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/dashboard\",\n        element: /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/login\",\n        element: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 56\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/forgetps\",\n        element: /*#__PURE__*/_jsxDEV(ForgetPs, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/mychart\",\n        element: /*#__PURE__*/_jsxDEV(MyChart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 58\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/barchart\",\n        element: /*#__PURE__*/_jsxDEV(BarChart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"9L0iMvlxgzpFN/wVDxp74SfSydw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Route","Routes","NavBar","SideBar","MainBar","Login","Register","ForgetPs","MyChart","BarChart","Dashboard","jsxDEV","_jsxDEV","App","_s","isSidebarOpen","setIsSidebarOpen","handleContentLoaded","sidebarToggle","document","getElementById","addEventListener","removeEventListener","children","fileName","_jsxFileName","lineNumber","columnNumber","id","className","path","element","_c","$RefreshReg$"],"sources":["C:/Users/Karthik/Documents/student_task/student_portal/src/App.js"],"sourcesContent":["// import React from \"react\";\n// import { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\n// import NavBar from \"./component/NavBar\";\n// import './index.css'\n// import SideBar from \"./component/SideBar\";\n// import MainBar from \"./component/MainBar\";\n// import Login from \"./component/Login\";\n// import Register from \"./component/Register\";\n// import ForgetPs from \"./component/ForgetPs\";\n// import MyChart from \"./component/MyChart\";\n// import BarChart from \"./component/BarChart\";\n// import Dashboard from \"./component/Dashboard\";\n\n// function App() {\n//     // const [isSidebarOpen, setIsSidebarOpen] = useState(\" \");//value,function\n\n//     // const toggleSidebar = () => {\n//     //     setIsSidebarOpen(!isSidebarOpen);\n//     // };\n\n//     // useEffect(() => {\n//     //     // Always add 'sb-nav-fixed' class to the body and conditionally add/remove 'sb-sidenav-toggled' class\n//     //     document.body.classList.toggle('sb-nav-fixed',\" \");\n//     //     document.body.classList.toggle('sb-sidenav-toggled', isSidebarOpen);\n//     // }, [isSidebarOpen]);\n    \n\n//     return (\n//         <Router>\n//             <nav>\n//                  <NavBar  />\n//             </nav>\n\n//             <div id=\"layoutSidenav\">\n//                 <Routes>\n//                     <Route path=\"/\" element={<SideBar />}/>\n//                 </Routes>\n                \n//                 <Routes>\n//                     <Route path=\"/\" element={<MainBar />} />\n//                 </Routes>      \n//             </div>\n//                     <Routes>  \n//                         <Route path=\"/dashboard\"  element={<Dashboard/>}/>\n//                         <Route path=\"/login\" element={<Login/>}/>\n//                         <Route path=\"/register\" element={<Register/>}/>\n//                         <Route path=\"/forgetps\" element={<ForgetPs/>}/>\n//                         <Route path=\"/mychart\" element={<MyChart />} />\n//                         <Route path=\"/barchart\" element={<BarChart />} />\n//                     </Routes>\n             \n                 \n//         </Router>\n  \n//     )\n\n    \n// }\n\n// export default App;\n\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Routes } from \"react-router-dom\";\nimport NavBar from \"./component/NavBar\";\nimport './index.css'\nimport SideBar from \"./component/SideBar\";\nimport MainBar from \"./component/MainBar\";\nimport Login from \"./component/Login\";\nimport Register from \"./component/Register\";\nimport ForgetPs from \"./component/ForgetPs\";\nimport MyChart from \"./component/MyChart\";\nimport BarChart from \"./component/BarChart\";\nimport Dashboard from \"./component/Dashboard\";\n\nfunction App() {\n    const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n\n    // Add an event listener to toggle the sidebar on DOMContentLoaded\n    useEffect(() => {\n        const handleContentLoaded = () => {\n            const sidebarToggle = document.getElementById('sidebarToggle');\n            if (sidebarToggle) {\n                sidebarToggle.addEventListener('click', () => {\n                    setIsSidebarOpen(!isSidebarOpen);\n                });\n            }\n        };\n\n        document.addEventListener('DOMContentLoaded', handleContentLoaded);\n\n        return () => {\n            // Clean up the event listener when the component unmounts\n            document.removeEventListener('DOMContentLoaded', handleContentLoaded);\n        };\n    }, [isSidebarOpen]);\n\n    return (\n        <Router>\n            <nav>\n                <NavBar />\n            </nav>\n\n            <div id=\"layoutSidenav\" className={isSidebarOpen ? 'sb-sidenav-toggled' : ''}>\n                <Routes>\n                    <Route path=\"/\" element={<SideBar />} />\n                </Routes>\n\n                <Routes>\n                    <Route path=\"/\" element={<MainBar />} />\n                </Routes>\n            </div>\n            \n            <Routes>  \n                       <Route path=\"/dashboard\"  element={<Dashboard/>}/>\n                         <Route path=\"/login\" element={<Login/>}/>\n                         <Route path=\"/register\" element={<Register/>}/>\n                         <Route path=\"/forgetps\" element={<ForgetPs/>}/>\n                         <Route path=\"/mychart\" element={<MyChart />} />\n                         <Route path=\"/barchart\" element={<BarChart />} />\n                    </Routes>\n        </Router>\n    )\n}\n\nexport default App;\n\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAGA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,aAAa,IAAIC,MAAM,EAAEC,KAAK,EAAEC,MAAM,QAAQ,kBAAkB;AACzE,OAAOC,MAAM,MAAM,oBAAoB;AACvC,OAAO,aAAa;AACpB,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,KAAK,MAAM,mBAAmB;AACrC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,OAAO,MAAM,qBAAqB;AACzC,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,SAAS,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACX,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;;EAEzD;EACAC,SAAS,CAAC,MAAM;IACZ,MAAMoB,mBAAmB,GAAGA,CAAA,KAAM;MAC9B,MAAMC,aAAa,GAAGC,QAAQ,CAACC,cAAc,CAAC,eAAe,CAAC;MAC9D,IAAIF,aAAa,EAAE;QACfA,aAAa,CAACG,gBAAgB,CAAC,OAAO,EAAE,MAAM;UAC1CL,gBAAgB,CAAC,CAACD,aAAa,CAAC;QACpC,CAAC,CAAC;MACN;IACJ,CAAC;IAEDI,QAAQ,CAACE,gBAAgB,CAAC,kBAAkB,EAAEJ,mBAAmB,CAAC;IAElE,OAAO,MAAM;MACT;MACAE,QAAQ,CAACG,mBAAmB,CAAC,kBAAkB,EAAEL,mBAAmB,CAAC;IACzE,CAAC;EACL,CAAC,EAAE,CAACF,aAAa,CAAC,CAAC;EAEnB,oBACIH,OAAA,CAACb,MAAM;IAAAwB,QAAA,gBACHX,OAAA;MAAAW,QAAA,eACIX,OAAA,CAACV,MAAM;QAAAsB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACT,CAAC,eAENf,OAAA;MAAKgB,EAAE,EAAC,eAAe;MAACC,SAAS,EAAEd,aAAa,GAAG,oBAAoB,GAAG,EAAG;MAAAQ,QAAA,gBACzEX,OAAA,CAACX,MAAM;QAAAsB,QAAA,eACHX,OAAA,CAACZ,KAAK;UAAC8B,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEnB,OAAA,CAACT,OAAO;YAAAqB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eAETf,OAAA,CAACX,MAAM;QAAAsB,QAAA,eACHX,OAAA,CAACZ,KAAK;UAAC8B,IAAI,EAAC,GAAG;UAACC,OAAO,eAAEnB,OAAA,CAACR,OAAO;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAENf,OAAA,CAACX,MAAM;MAAAsB,QAAA,gBACIX,OAAA,CAACZ,KAAK;QAAC8B,IAAI,EAAC,YAAY;QAAEC,OAAO,eAAEnB,OAAA,CAACF,SAAS;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAChDf,OAAA,CAACZ,KAAK;QAAC8B,IAAI,EAAC,QAAQ;QAACC,OAAO,eAAEnB,OAAA,CAACP,KAAK;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACzCf,OAAA,CAACZ,KAAK;QAAC8B,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEnB,OAAA,CAACN,QAAQ;UAAAkB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/Cf,OAAA,CAACZ,KAAK;QAAC8B,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEnB,OAAA,CAACL,QAAQ;UAAAiB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eAC/Cf,OAAA,CAACZ,KAAK;QAAC8B,IAAI,EAAC,UAAU;QAACC,OAAO,eAAEnB,OAAA,CAACJ,OAAO;UAAAgB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAC/Cf,OAAA,CAACZ,KAAK;QAAC8B,IAAI,EAAC,WAAW;QAACC,OAAO,eAAEnB,OAAA,CAACH,QAAQ;UAAAe,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEjB;AAACb,EAAA,CAhDQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAkDZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}