{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karthik\\\\Documents\\\\student_task\\\\student_portal\\\\src\\\\component\\\\Sidebar\\\\Task.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Table from 'react-bootstrap/Table';\nimport Button from 'react-bootstrap/Button';\nimport DoughnutChart from '../Dashboard/DoughnutChart';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Task() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [userId, setUserId] = useState(''); // State to store the user ID after login\n\n  useEffect(() => {\n    // Example: Retrieve user ID from context or local storage after login\n    const loggedInUserId = localStorage.getItem('userId'); // Replace with your actual method\n\n    if (loggedInUserId) {\n      setUserId(loggedInUserId); // Set the user ID for fetching tasks\n    }\n  }, []);\n  useEffect(() => {\n    if (userId) {\n      const fetchTasks = async () => {\n        try {\n          const response = await axios.get(`http://localhost:3001/users/${userId}/stasks`);\n          if (response.status === 200) {\n            console.log('Fetched tasks:', response.data.stasks); // Check the fetched tasks\n            setTasks(response.data.stasks);\n          } else {\n            console.error('Failed to fetch tasks');\n          }\n        } catch (error) {\n          console.error('Error fetching tasks:', error);\n        }\n      };\n      fetchTasks();\n    }\n  }, [userId]);\n  const handleDelete = async taskId => {\n    try {\n      const response = await axios.delete(`http://localhost:3001/deleteTask/${userId}/${taskId}`);\n      if (response.status === 200) {\n        // Update the tasks after a successful deletion\n        setTasks(tasks.filter(task => task._id !== taskId));\n      } else {\n        console.error('Task deletion failed');\n      }\n    } catch (error) {\n      console.error('Error deleting task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DoughnutChart, {\n      tasks: tasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              onClick: () => handleDelete(task._id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, task._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n_s(Task, \"UKu4Iw7oM4D/XpqE/ybJ6ssHmlw=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","useEffect","Table","Button","DoughnutChart","axios","jsxDEV","_jsxDEV","Task","_s","tasks","setTasks","userId","setUserId","loggedInUserId","localStorage","getItem","fetchTasks","response","get","status","console","log","data","stasks","error","handleDelete","taskId","delete","filter","task","_id","children","fileName","_jsxFileName","lineNumber","columnNumber","striped","bordered","hover","map","index","variant","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Karthik/Documents/student_task/student_portal/src/component/Sidebar/Task.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Table from 'react-bootstrap/Table';\r\nimport Button from 'react-bootstrap/Button';\r\nimport DoughnutChart from '../Dashboard/DoughnutChart';\r\nimport axios from 'axios';\r\n\r\nfunction Task() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [userId, setUserId] = useState(''); // State to store the user ID after login\r\n\r\n  useEffect(() => {\r\n    // Example: Retrieve user ID from context or local storage after login\r\n    const loggedInUserId = localStorage.getItem('userId'); // Replace with your actual method\r\n\r\n    if (loggedInUserId) {\r\n      setUserId(loggedInUserId); // Set the user ID for fetching tasks\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      const fetchTasks = async () => {\r\n        try {\r\n          const response = await axios.get(`http://localhost:3001/users/${userId}/stasks`);\r\n          if (response.status === 200) {\r\n            console.log('Fetched tasks:', response.data.stasks); // Check the fetched tasks\r\n            setTasks(response.data.stasks);\r\n          } else {\r\n            console.error('Failed to fetch tasks');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error fetching tasks:', error);\r\n        }\r\n      };\r\n\r\n      fetchTasks();\r\n    }\r\n  }, [userId]);\r\n\r\n  const handleDelete = async (taskId) => {\r\n    try {\r\n      const response = await axios.delete(`http://localhost:3001/deleteTask/${userId}/${taskId}`);\r\n      if (response.status === 200) {\r\n        // Update the tasks after a successful deletion\r\n        setTasks(tasks.filter(task => task._id !== taskId));\r\n      } else {\r\n        console.error('Task deletion failed');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h3>Tasks</h3>\r\n      <DoughnutChart tasks={tasks} />\r\n      <Table striped bordered hover>\r\n        {/* ... */}\r\n        <tbody>\r\n          {tasks.map((task, index) => (\r\n            <tr key={task._id}>\r\n              {/* ... */}\r\n              <td>\r\n                <Button variant=\"danger\" onClick={() => handleDelete(task._id)}>\r\n                  Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Task;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}