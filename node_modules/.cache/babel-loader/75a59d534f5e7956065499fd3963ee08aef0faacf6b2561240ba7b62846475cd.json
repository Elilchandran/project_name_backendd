{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karthik\\\\Documents\\\\student_task\\\\student_portal\\\\src\\\\component\\\\Dashboard\\\\DoughnutChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DoughnutChart({\n  tasks\n}) {\n  _s();\n  const chartRef = useRef(null);\n  const chartInstanceRef = useRef(null);\n  useEffect(() => {\n    if (tasks && tasks.length > 0) {\n      //const completedTasks = tasks.filter(task => task.status === 'completed').length;\n      const submittedTasks = tasks.filter(task => task.status === 'SUBMITTED TASK').length;\n      const lastSubmittedTask = tasks.filter(task => task.status !== 'completed' && task.status !== 'SUBMITTED TASK').length;\n      const totalTasks = tasks.length;\n      const ctx = chartRef.current.getContext('2d');\n      const data = {\n        labels: ['Submitted Task', 'Last Submitted Task', 'Total Task'],\n        datasets: [{\n          label: 'Task',\n          data: [submittedTasks, lastSubmittedTask, totalTasks],\n          backgroundColor: ['#FFCA3E', '#772F67', '#619ED6'],\n          hoverOffset: 4\n        }]\n      };\n      const config = {\n        type: 'doughnut',\n        data: data,\n        options: {\n          responsive: true,\n          maintainAspectRatio: false\n        }\n      };\n      if (chartInstanceRef.current) {\n        chartInstanceRef.current.destroy();\n      }\n      chartInstanceRef.current = new Chart(ctx, config);\n      return () => {\n        if (chartInstanceRef.current) {\n          chartInstanceRef.current.destroy();\n        }\n      };\n    }\n  }, [tasks]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: \"fas fa-chart-pie me-1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), \"Task Status Chart\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      style: {\n        height: '400px'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef,\n        id: \"doughnutChart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-footer small text-muted\",\n      children: \"Updated yesterday at 11:59 PM\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(DoughnutChart, \"0kidk2EAizBYKgfY+KQx4ULbe78=\");\n_c = DoughnutChart;\nexport default DoughnutChart;\nvar _c;\n$RefreshReg$(_c, \"DoughnutChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","DoughnutChart","tasks","_s","chartRef","chartInstanceRef","length","submittedTasks","filter","task","status","lastSubmittedTask","totalTasks","ctx","current","getContext","data","labels","datasets","label","backgroundColor","hoverOffset","config","type","options","responsive","maintainAspectRatio","destroy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","height","ref","id","_c","$RefreshReg$"],"sources":["C:/Users/Karthik/Documents/student_task/student_portal/src/component/Dashboard/DoughnutChart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction DoughnutChart({ tasks }) {\r\n  const chartRef = useRef(null);\r\n  const chartInstanceRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (tasks && tasks.length > 0) {\r\n      //const completedTasks = tasks.filter(task => task.status === 'completed').length;\r\n      const submittedTasks = tasks.filter(task => task.status === 'SUBMITTED TASK').length;\r\n      const lastSubmittedTask = tasks.filter(task => task.status !== 'completed' && task.status !== 'SUBMITTED TASK').length;\r\n      const totalTasks = tasks.length;\r\n\r\n      const ctx = chartRef.current.getContext('2d');\r\n      const data = {\r\n        labels: [ 'Submitted Task','Last Submitted Task', 'Total Task'],\r\n        datasets: [\r\n          {\r\n            label: 'Task',\r\n            data: [ submittedTasks,lastSubmittedTask, totalTasks],\r\n            backgroundColor: [ '#FFCA3E','#772F67', '#619ED6'],\r\n            hoverOffset: 4,\r\n          },\r\n        ],\r\n      };\r\n      const config = {\r\n        type: 'doughnut',\r\n        data: data,\r\n        options: {\r\n          responsive: true,\r\n          maintainAspectRatio: false,\r\n        },\r\n      };\r\n\r\n      if (chartInstanceRef.current) {\r\n        chartInstanceRef.current.destroy();\r\n      }\r\n\r\n      chartInstanceRef.current = new Chart(ctx, config);\r\n\r\n      return () => {\r\n        if (chartInstanceRef.current) {\r\n          chartInstanceRef.current.destroy();\r\n        }\r\n      };\r\n    }\r\n  }, [tasks]);\r\n\r\n  return (\r\n    <div className=\"card mb-4\">\r\n      <div className=\"card-header\">\r\n        <i className=\"fas fa-chart-pie me-1\"></i>\r\n        Task Status Chart\r\n      </div>\r\n      <div className=\"card-body\" style={{ height: '400px' }}>\r\n        <canvas ref={chartRef} id=\"doughnutChart\"></canvas>\r\n      </div>\r\n      <div className=\"card-footer small text-muted\">Updated yesterday at 11:59 PM</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DoughnutChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}