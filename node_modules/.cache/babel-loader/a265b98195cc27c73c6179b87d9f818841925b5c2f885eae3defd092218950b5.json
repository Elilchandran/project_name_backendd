{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karthik\\\\Documents\\\\student_task\\\\student_portal\\\\src\\\\component\\\\Dbarchart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dbarchart() {\n  _s();\n  const lineChartRef = useRef(null);\n  useEffect(() => {\n    // Get the canvas element for the line chart\n    var lineCtx = document.getElementById('myLineChart').getContext('2d');\n\n    // Destroy the existing line chart if it exists\n    if (lineChartRef.current) {\n      lineChartRef.current.destroy();\n    }\n\n    // Define data for the line chart\n    var lineData = {\n      labels: ['January', 'February', 'March', 'April', 'May'],\n      datasets: [{\n        label: 'Line Chart Data',\n        data: [12, 19, 3, 5, 2],\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1,\n        fill: false\n      }]\n    };\n\n    // Create the line chart\n    lineChartRef.current = new Chart(lineCtx, {\n      type: 'line',\n      data: lineData,\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myLineChart\",\n      width: \"100\",\n      height: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(Dbarchart, \"DC4iA2GaDwgHN5HPdKVTuWAT1Tk=\");\n_c = Dbarchart;\nexport default Dbarchart;\nvar _c;\n$RefreshReg$(_c, \"Dbarchart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","jsxDEV","_jsxDEV","Dbarchart","_s","lineChartRef","lineCtx","document","getElementById","getContext","current","destroy","lineData","labels","datasets","label","data","borderColor","borderWidth","fill","type","options","scales","y","beginAtZero","children","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Karthik/Documents/student_task/student_portal/src/component/Dbarchart.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto';\r\n\r\nfunction Dbarchart() {\r\n  const lineChartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    // Get the canvas element for the line chart\r\n    var lineCtx = document.getElementById('myLineChart').getContext('2d');\r\n\r\n    // Destroy the existing line chart if it exists\r\n    if (lineChartRef.current) {\r\n      lineChartRef.current.destroy();\r\n    }\r\n\r\n    // Define data for the line chart\r\n    var lineData = {\r\n      labels: ['January', 'February', 'March', 'April', 'May'],\r\n      datasets: [\r\n        {\r\n          label: 'Line Chart Data',\r\n          data: [12, 19, 3, 5, 2],\r\n          borderColor: 'rgba(75, 192, 192, 1)',\r\n          borderWidth: 1,\r\n          fill: false,\r\n        },\r\n      ],\r\n    };\r\n\r\n    // Create the line chart\r\n    lineChartRef.current = new Chart(lineCtx, {\r\n      type: 'line',\r\n      data: lineData,\r\n      options: {\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <canvas id=\"myLineChart\" width=\"100\" height=\"50\"></canvas>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dbarchart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,YAAY,GAAGN,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd;IACA,IAAIQ,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;;IAErE;IACA,IAAIJ,YAAY,CAACK,OAAO,EAAE;MACxBL,YAAY,CAACK,OAAO,CAACC,OAAO,CAAC,CAAC;IAChC;;IAEA;IACA,IAAIC,QAAQ,GAAG;MACbC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;MACxDC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,iBAAiB;QACxBC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACvBC,WAAW,EAAE,uBAAuB;QACpCC,WAAW,EAAE,CAAC;QACdC,IAAI,EAAE;MACR,CAAC;IAEL,CAAC;;IAED;IACAd,YAAY,CAACK,OAAO,GAAG,IAAIV,KAAK,CAACM,OAAO,EAAE;MACxCc,IAAI,EAAE,MAAM;MACZJ,IAAI,EAAEJ,QAAQ;MACdS,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;UACf;QACF;MACF;IACF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEtB,OAAA;IAAAuB,QAAA,eACEvB,OAAA;MAAQwB,EAAE,EAAC,aAAa;MAACC,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvD,CAAC;AAEV;AAAC5B,EAAA,CA7CQD,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA+ClB,eAAeA,SAAS;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}