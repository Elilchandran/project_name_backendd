{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karthik\\\\Documents\\\\student_task\\\\student_portal\\\\src\\\\component\\\\Sidebar\\\\TasksSubmission.js\",\n  _s = $RefreshSig$();\n// TasksSubmission.js\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TasksSubmission = ({\n  userId\n}) => {\n  _s();\n  const [taskName, setTaskName] = useState('');\n  const [description, setDescription] = useState('');\n  const handleTaskSubmit = async () => {\n    try {\n      const response = await fetch('http://localhost:3001/tasks', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          userId,\n          taskName,\n          description\n        })\n      });\n      if (response.ok) {\n        // Task added successfully\n        console.log('Task added successfully');\n        // You might want to update the tasks list by making a new fetch call here\n      } else {\n        console.error('Error adding task:', response.status);\n      }\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: taskName,\n      onChange: e => setTaskName(e.target.value),\n      placeholder: \"Task Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: description,\n      onChange: e => setDescription(e.target.value),\n      placeholder: \"Task Description\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTaskSubmit,\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(TasksSubmission, \"wJnT0f4IV1x28+4VF5HzQoEs21E=\");\n_c = TasksSubmission;\nexport default TasksSubmission;\nvar _c;\n$RefreshReg$(_c, \"TasksSubmission\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TasksSubmission","userId","_s","taskName","setTaskName","description","setDescription","handleTaskSubmit","response","fetch","method","headers","body","JSON","stringify","ok","console","log","error","status","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Karthik/Documents/student_task/student_portal/src/component/Sidebar/TasksSubmission.js"],"sourcesContent":["// TasksSubmission.js\r\n\r\nimport React, { useState } from 'react';\r\n\r\nconst TasksSubmission = ({ userId }) => {\r\n  const [taskName, setTaskName] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  const handleTaskSubmit = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:3001/tasks', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          userId,\r\n          taskName,\r\n          description,\r\n        }),\r\n      });\r\n\r\n      if (response.ok) {\r\n        // Task added successfully\r\n        console.log('Task added successfully');\r\n        // You might want to update the tasks list by making a new fetch call here\r\n      } else {\r\n        console.error('Error adding task:', response.status);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error adding task:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add a Task</h2>\r\n      <input\r\n        type=\"text\"\r\n        value={taskName}\r\n        onChange={(e) => setTaskName(e.target.value)}\r\n        placeholder=\"Task Name\"\r\n      />\r\n      <textarea\r\n        value={description}\r\n        onChange={(e) => setDescription(e.target.value)}\r\n        placeholder=\"Task Description\"\r\n      ></textarea>\r\n      <button onClick={handleTaskSubmit}>Submit</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TasksSubmission;\r\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,eAAe,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMU,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;QAC1DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBb,MAAM;UACNE,QAAQ;UACRE;QACF,CAAC;MACH,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACO,EAAE,EAAE;QACf;QACAC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;QACtC;MACF,CAAC,MAAM;QACLD,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEV,QAAQ,CAACW,MAAM,CAAC;MACtD;IACF,CAAC,CAAC,OAAOD,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;EAED,oBACEnB,OAAA;IAAAqB,QAAA,gBACErB,OAAA;MAAAqB,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBzB,OAAA;MACE0B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEvB,QAAS;MAChBwB,QAAQ,EAAGC,CAAC,IAAKxB,WAAW,CAACwB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC7CI,WAAW,EAAC;IAAW;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFzB,OAAA;MACE2B,KAAK,EAAErB,WAAY;MACnBsB,QAAQ,EAAGC,CAAC,IAAKtB,cAAc,CAACsB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAChDI,WAAW,EAAC;IAAkB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACZzB,OAAA;MAAQgC,OAAO,EAAExB,gBAAiB;MAAAa,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEV,CAAC;AAACtB,EAAA,CA/CIF,eAAe;AAAAgC,EAAA,GAAfhC,eAAe;AAiDrB,eAAeA,eAAe;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}