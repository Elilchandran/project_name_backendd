{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karthik\\\\Documents\\\\student_task\\\\student_portal\\\\src\\\\component\\\\Sidebar\\\\Task.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Task = ({\n  userId\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        if (userId) {\n          const response = await axios.get(`http://localhost:3001/users/${userId}/stasks`);\n          if (response.status === 200) {\n            setTasks(response.data); // Assuming response.data contains tasks\n          } else {\n            console.error('Failed to fetch tasks');\n          }\n        } else {\n          console.error('User ID is undefined');\n        }\n      } catch (error) {\n        console.error('Error fetching tasks:', error);\n      }\n    };\n    fetchTasks();\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"User Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Task Name: \", task.taskName]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", task.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Task, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = Task;\nexport default Task;\nvar _c;\n$RefreshReg$(_c, \"Task\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","Task","userId","_s","tasks","setTasks","fetchTasks","response","get","status","data","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","map","task","taskName","description","_id","_c","$RefreshReg$"],"sources":["C:/Users/Karthik/Documents/student_task/student_portal/src/component/Sidebar/Task.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst Task = ({ userId }) => {\r\n  const [tasks, setTasks] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchTasks = async () => {\r\n      try {\r\n        if (userId) {\r\n          const response = await axios.get(`http://localhost:3001/users/${userId}/stasks`);\r\n          if (response.status === 200) {\r\n            setTasks(response.data); // Assuming response.data contains tasks\r\n          } else {\r\n            console.error('Failed to fetch tasks');\r\n          }\r\n        } else {\r\n          console.error('User ID is undefined');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching tasks:', error);\r\n      }\r\n    };\r\n\r\n    fetchTasks();\r\n  }, [userId]);\r\n\r\n  return (\r\n    <div>\r\n      <h1>User Tasks</h1>\r\n      <ul>\r\n        {tasks.map(task => (\r\n          <li key={task._id}>\r\n            {/* Display task information */}\r\n            <p>Task Name: {task.taskName}</p>\r\n            <p>Description: {task.description}</p>\r\n            {/* Add other task details here */}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAC;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMS,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,IAAIJ,MAAM,EAAE;UACV,MAAMK,QAAQ,GAAG,MAAMT,KAAK,CAACU,GAAG,CAAE,+BAA8BN,MAAO,SAAQ,CAAC;UAChF,IAAIK,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;YAC3BJ,QAAQ,CAACE,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC;UAC3B,CAAC,MAAM;YACLC,OAAO,CAACC,KAAK,CAAC,uBAAuB,CAAC;UACxC;QACF,CAAC,MAAM;UACLD,OAAO,CAACC,KAAK,CAAC,sBAAsB,CAAC;QACvC;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IAEDN,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,oBACEF,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnBjB,OAAA;MAAAa,QAAA,EACGT,KAAK,CAACc,GAAG,CAACC,IAAI,iBACbnB,OAAA;QAAAa,QAAA,gBAEEb,OAAA;UAAAa,QAAA,GAAG,aAAW,EAACM,IAAI,CAACC,QAAQ;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACjCjB,OAAA;UAAAa,QAAA,GAAG,eAAa,EAACM,IAAI,CAACE,WAAW;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAH/BE,IAAI,CAACG,GAAG;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACF,CAAC;AAEV,CAAC;AAACd,EAAA,CAvCIF,IAAI;AAAAsB,EAAA,GAAJtB,IAAI;AAyCV,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}