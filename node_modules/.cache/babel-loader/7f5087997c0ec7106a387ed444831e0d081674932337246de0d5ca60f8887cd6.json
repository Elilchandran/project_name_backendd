{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nfunction DTask({\n  addTask,\n  tasks\n}) {\n  _s();\n  const [inputValues, setInputValues] = useState({\n    sNo: '',\n    batch: '',\n    task: '',\n    submissionDate: new Date().toISOString().slice(0, 10)\n  });\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setInputValues({\n      ...inputValues,\n      [name]: value\n    });\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    // Create a new task object and add it to the tasks array\n    const newTask = {\n      ...inputValues,\n      id: Date.now()\n    };\n    addTask([...tasks, newTask]);\n\n    // Clear the input fields after submission\n    setInputValues({\n      sNo: '',\n      batch: '',\n      task: '',\n      submissionDate: new Date().toISOString().slice(0, 10)\n    });\n  };\n\n  // Rest of your component code for rendering the form and task list\n}\n_s(DTask, \"JaTETS/QHoa0nBtA8JaIIbx1sW0=\");\n_c = DTask;\nexport default DTask;\nvar _c;\n$RefreshReg$(_c, \"DTask\");","map":{"version":3,"names":["React","useState","DTask","addTask","tasks","_s","inputValues","setInputValues","sNo","batch","task","submissionDate","Date","toISOString","slice","handleChange","event","name","value","target","handleSubmit","preventDefault","newTask","id","now","_c","$RefreshReg$"],"sources":["C:/Users/Karthik/Documents/student_task/student_portal/src/component/DTask.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nfunction DTask({ addTask, tasks }) {\r\n  const [inputValues, setInputValues] = useState({\r\n    sNo: '',\r\n    batch: '',\r\n    task: '',\r\n    submissionDate: new Date().toISOString().slice(0, 10),\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value } = event.target;\r\n    setInputValues({\r\n      ...inputValues,\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Create a new task object and add it to the tasks array\r\n    const newTask = { ...inputValues, id: Date.now() };\r\n    addTask([...tasks, newTask]);\r\n\r\n    // Clear the input fields after submission\r\n    setInputValues({\r\n      sNo: '',\r\n      batch: '',\r\n      task: '',\r\n      submissionDate: new Date().toISOString().slice(0, 10),\r\n    });\r\n  };\r\n\r\n  // Rest of your component code for rendering the form and task list\r\n}\r\n\r\nexport default DTask;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAEvC,SAASC,KAAKA,CAAC;EAAEC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACjC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,QAAQ,CAAC;IAC7CO,GAAG,EAAE,EAAE;IACPC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,EAAE;IACRC,cAAc,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE;EACtD,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,KAAK,IAAK;IAC9B,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,KAAK,CAACG,MAAM;IACpCZ,cAAc,CAAC;MACb,GAAGD,WAAW;MACd,CAACW,IAAI,GAAGC;IACV,CAAC,CAAC;EACJ,CAAC;EAED,MAAME,YAAY,GAAIJ,KAAK,IAAK;IAC9BA,KAAK,CAACK,cAAc,CAAC,CAAC;;IAEtB;IACA,MAAMC,OAAO,GAAG;MAAE,GAAGhB,WAAW;MAAEiB,EAAE,EAAEX,IAAI,CAACY,GAAG,CAAC;IAAE,CAAC;IAClDrB,OAAO,CAAC,CAAC,GAAGC,KAAK,EAAEkB,OAAO,CAAC,CAAC;;IAE5B;IACAf,cAAc,CAAC;MACbC,GAAG,EAAE,EAAE;MACPC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,EAAE;MACRC,cAAc,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,EAAE;IACtD,CAAC,CAAC;EACJ,CAAC;;EAED;AACF;AAACT,EAAA,CAjCQH,KAAK;AAAAuB,EAAA,GAALvB,KAAK;AAmCd,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}