{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Karthik\\\\Documents\\\\student_task\\\\student_portal\\\\src\\\\component\\\\MyChart.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport Chart from 'chart.js/auto'; // Import Chart.js\nimport Dchart from './Dchart';\nimport SideBar from './SideBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MyChart() {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    if (chartRef.current) {\n      // If a chart instance already exists, destroy it\n      chartRef.current.destroy();\n    }\n\n    // Get the chart canvas element\n    var ctx = document.getElementById('myChart').getContext('2d');\n\n    // Define your data\n    var data = {\n      labels: ['January', 'February', 'March', 'April', 'May'],\n      datasets: [{\n        label: 'My Data',\n        data: [12, 19, 3, 5, 2],\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\n        borderColor: 'rgba(75, 192, 192, 1)',\n        borderWidth: 1\n      }]\n    };\n\n    // Create the chart\n    var Dchart = new Chart(ctx, {\n      type: 'bar',\n      data: data,\n      options: {\n        scales: {\n          y: {\n            beginAtZero: true\n          }\n        }\n      }\n    });\n\n    // Store the chart instance in the ref\n    chartRef.current = Dchart;\n  }, []); // Empty dependency array to run the effect only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      id: \"myChart\",\n      width: \"100\",\n      height: \"50\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SideBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(MyChart, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = MyChart;\nexport default MyChart;\nvar _c;\n$RefreshReg$(_c, \"MyChart\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","Dchart","SideBar","jsxDEV","_jsxDEV","MyChart","_s","chartRef","current","destroy","ctx","document","getElementById","getContext","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","type","options","scales","y","beginAtZero","children","id","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Karthik/Documents/student_task/student_portal/src/component/MyChart.js"],"sourcesContent":["\r\n\r\nimport React, { useEffect, useRef } from 'react';\r\nimport Chart from 'chart.js/auto'; // Import Chart.js\r\nimport Dchart from './Dchart'\r\nimport SideBar from './SideBar'\r\n\r\nfunction MyChart() {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (chartRef.current) {\r\n      // If a chart instance already exists, destroy it\r\n      chartRef.current.destroy();\r\n    }\r\n\r\n    // Get the chart canvas element\r\n    var ctx = document.getElementById('myChart').getContext('2d');\r\n\r\n    // Define your data\r\n    var data = {\r\n      labels: ['January', 'February', 'March', 'April', 'May'],\r\n      datasets: [\r\n        {\r\n          label: 'My Data',\r\n          data: [12, 19, 3, 5, 2],\r\n          backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n          borderColor: 'rgba(75, 192, 192, 1)',\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n\r\n    // Create the chart\r\n    var Dchart = new Chart(ctx, {\r\n      type: 'bar',\r\n      data: data,\r\n      options: {\r\n        scales: {\r\n          y: {\r\n            beginAtZero: true,\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    // Store the chart instance in the ref\r\n    chartRef.current = Dchart;\r\n  }, []); // Empty dependency array to run the effect only once\r\n\r\n  return (\r\n    <div>\r\n      <canvas id=\"myChart\" width=\"100\" height=\"50\"></canvas>\r\n      <SideBar/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyChart;\r\n"],"mappings":";;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAChD,OAAOC,KAAK,MAAM,eAAe,CAAC,CAAC;AACnC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAI,CAAC;EAE7BD,SAAS,CAAC,MAAM;IACd,IAAIS,QAAQ,CAACC,OAAO,EAAE;MACpB;MACAD,QAAQ,CAACC,OAAO,CAACC,OAAO,CAAC,CAAC;IAC5B;;IAEA;IACA,IAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC,CAACC,UAAU,CAAC,IAAI,CAAC;;IAE7D;IACA,IAAIC,IAAI,GAAG;MACTC,MAAM,EAAE,CAAC,SAAS,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,CAAC;MACxDC,QAAQ,EAAE,CACR;QACEC,KAAK,EAAE,SAAS;QAChBH,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACvBI,eAAe,EAAE,yBAAyB;QAC1CC,WAAW,EAAE,uBAAuB;QACpCC,WAAW,EAAE;MACf,CAAC;IAEL,CAAC;;IAED;IACA,IAAInB,MAAM,GAAG,IAAID,KAAK,CAACU,GAAG,EAAE;MAC1BW,IAAI,EAAE,KAAK;MACXP,IAAI,EAAEA,IAAI;MACVQ,OAAO,EAAE;QACPC,MAAM,EAAE;UACNC,CAAC,EAAE;YACDC,WAAW,EAAE;UACf;QACF;MACF;IACF,CAAC,CAAC;;IAEF;IACAlB,QAAQ,CAACC,OAAO,GAAGP,MAAM;EAC3B,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEG,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAQuB,EAAE,EAAC,SAAS;MAACC,KAAK,EAAC,KAAK;MAACC,MAAM,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,eACtD7B,OAAA,CAACF,OAAO;MAAA4B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEV;AAAC3B,EAAA,CAjDQD,OAAO;AAAA6B,EAAA,GAAP7B,OAAO;AAmDhB,eAAeA,OAAO;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}